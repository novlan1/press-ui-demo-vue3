function n(n,t={}){const i=t.indexKey||"index";return{inject:{[n]:{default:null}},computed:{[i](){const t=this;return t.bindRelation(),t[n]?t[n].children.indexOf(this):null}},watch:{disableBindRelation(n){n||this.bindRelation()}},created(){},mounted(){this.bindRelation()},beforeUnmount(){this.onBeforeMount()},methods:{bindRelation(){if(!this[n]||-1!==this[n].children.indexOf(this))return;const t=[...this[n].children,this];try{this[n]}catch(i){console.log("err",i)}this[n].children=t},onBeforeMount(){var t;const i=this;i[n]&&(i[n].children=i[n].children.filter((n=>n!==i)),null==(t=null==i?void 0:i.destroyCallback)||t.call(i))}}}}function t(n){return{provide(){return{[n]:this}},data:()=>({})}}export{n as C,t as P};
